# Initial code
.pos 0
init:
	irmovq Stack, %rsp	# set up stack pointer
	irmovq ele1, %rdi
	call sum_list
	halt

# Sample linked list
.align 8
ele1:
	.quad 0x00a
	.quad ele2
ele2:
	.quad 0x0b0
	.quad ele3
ele3:
	.quad 0xc00
	.quad 0

# long sum_list(list_ptr ls)
# ls in %rdi
sum_list:
	xorq %rax, %rax		# val = 0
	andq %rdi, %rdi		# Test ls
	je Done			# If zero, goto Done
	
Loop:
	mrmovq (%rdi), %rcx	# move ls->val to rcx
	addq %rcx, %rax		# add current element to val
	mrmovq 8(%rdi), %rdi	# set ls to next list element
	andq %rdi, %rdi		# Test ls
	jne Loop		# If not zero, goto Loop

Done:
	ret			# return

.pos 0x100
Stack:
